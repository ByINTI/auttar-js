{"version":3,"file":"index.umd.js","sources":["../src/Helpers.js","../src/Auttar.js"],"sourcesContent":["const LogLevelName = {\n  Info: 'info',\n  Warn: 'warn',\n  Error: 'error',\n  Method: 'method',\n  All: 'all',\n  None: 'none',\n};\n\nconst LogLevelStyle = {\n  Info: 'background:#215ace ; padding: 2px; border-radius: 2px 0 0 2px;  color: #fff;',\n  Warn: 'background:#e8c82c ; padding: 2px; border-radius: 2px 0 0 2px;  color: #000;',\n  Error: 'background:#c92112 ; padding: 2px; border-radius: 2px 0 0 2px;  color: #fff;',\n  Method: 'background:#6d0cb2 ; padding: 2px; border-radius: 2px 0 0 2px;  color: #fff;',\n};\n\nconst NAME = 'Auttar ';\nconst BACKGROUND = 'background:#bc0909 ; padding: 2px; border-radius: 0 2px 2px 0;  color: #fff ';\n\nconst log = (name, style, className, classStyle, message) => {\n  console.log(`%c ${name} %c ${className} %c ${message}`, style, classStyle, 'background: transparent;'); // eslint-disable-line no-console\n};\n\nconst showError = (name, style, className, classStyle, message) => {\n  console.error(`%c ${name} %c ${className} %c ${message}`, style, classStyle, 'background: transparent;'); // eslint-disable-line no-console\n};\n\nexport function required(name, param) {\n  if (param === undefined) {\n    throw new Error(`Parâmetro obrigatório ${name} não declarado.`);\n  }\n\n  return param;\n}\n\nexport function logInfo(msg) {\n  log(LogLevelName.Info, LogLevelStyle.Info, NAME, BACKGROUND, msg);\n}\n\nexport function logWarn(msg) {\n  log(LogLevelName.Warn, LogLevelStyle.Warn, NAME, BACKGROUND, msg);\n}\n\nexport function logMethod(method, args, params) {\n  log(LogLevelName.Method, LogLevelStyle.Method, NAME, BACKGROUND,\n      `Call Method: ${method}(${args || ''}) ${(params) ? `=> ${JSON.stringify(params)}` : ''}`);\n}\n\nexport function logError(msg) {\n  showError(LogLevelName.Warn, LogLevelStyle.Warn, NAME, BACKGROUND, msg);\n}\n\n/**\n * Add spaces to match the max screen length\n * @param {string} text\n * @param {number} maxChar\n * @returns {string}\n */\nexport function addSpaces(text, maxChar) {\n  return text\n    .split('')\n    .concat(...Array(maxChar)\n      .fill(' '))\n    .slice(0, maxChar)\n    .join('');\n}\n\nexport default {\n  required,\n  logInfo,\n  logError,\n  logWarn,\n  logMethod,\n  addSpaces,\n};\n","/* eslint-disable */\nimport { logInfo, logError, logMethod, logWarn } from './Helpers';\n\nconst privateVariables = {\n  transactions: {\n    credit: {\n      base: 112,\n      installment: 113,\n      installmentWithInterest: 114,\n    },\n    debit: {\n      base: 101,\n      voucher: 106,\n    },\n    cancel: 128,\n    confirm: 6,\n    requestCancel: 191,\n  },\n  return: {\n    success: 0,\n    timeOut: 1,\n    notAuthorizes: 5,\n    internetError: 10,\n    intertefError: 12,\n    error: 20,\n    ecommerceError: 30,\n  },\n  errorCodes: {\n    5300: 'Valor não informado',\n    5301: 'Cartão inválido',\n    5302: 'Cartão vencido',\n    5303: 'Data de vencimento inválido',\n    5304: 'Código de segurança inválido',\n    5305: 'Taxa de serviço excede limite',\n    5306: 'Operação não permitida',\n    5307: 'Dados inválidos',\n    5308: 'Valor mínimo da parcela inválido',\n    5309: 'Número de parcelas inválido',\n    5310: 'Número de parcelas excede limite',\n    5311: 'Valor da entrada maior ou igual ao valor da transação',\n    5312: 'Valor da parcela inválido',\n    5313: 'Data inválida',\n    5314: 'Prazo excede limite',\n    5316: 'NSU inválido',\n    5317: 'Operação cancelada pelo usuário',\n    5318: 'Documento inválido (CPF ou CNPJ)',\n    5319: 'Valor do documento inválido',\n    5328: 'Erro na captura de dados do Pin-Pad',\n    5329: 'Erro na captura do chip ou cartão removido antes da hora.',\n    5364: 'Data de emissão do cartão inválida',\n    5355: 'O tipo de financiamento informado não é coerente com o número de parcelas',\n  },\n  ws: null,\n  timeout: null,\n  close: true,\n  timeoutConn: null,\n  host: '',\n  debug: false,\n};\n\nfunction _disconnect() {\n  if (privateVariables.debug) {\n    logMethod('_disconnect');\n  }\n\n  privateVariables.ws.close();\n\n  if (privateVariables.debug) {\n    logInfo('WebSocket Disconnected');\n  }\n}\n\nfunction _webSocket(host, payload) {\n  if (privateVariables.debug) {\n    logMethod('_webSocket', 'host, payload', host, payload);\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      if (privateVariables.debug) {\n        logInfo('Starting WebSocket Connection.');\n      }\n\n      if (privateVariables.ws === null) {\n        if (privateVariables.debug) {\n          logInfo('WebSocket not active, creating a new connection.');\n        }\n\n        privateVariables.host = host;\n        privateVariables.ws = new WebSocket(host);\n      } else if (privateVariables.ws.readyState === 2 || privateVariables.ws.readyState === 3) {\n        if (privateVariables.debug) {\n          logWarn('WebSocket is connected but not available. Closing connection to start a new one.');\n        }\n\n        _disconnect();\n        privateVariables.ws = new WebSocket(host);\n      }\n    } catch (e) {\n      reject(e);\n    }\n\n    if (privateVariables.ws) {\n      privateVariables.ws.onerror = (evtError) => {\n        if (privateVariables.debug) {\n          logWarn('WebSocket has returned an error.');\n          logError(evtError);\n        }\n\n        reject(evtError);\n      };\n    }\n  });\n}\n\nfunction _send(payload) {\n  if (privateVariables.debug) {\n    logMethod('_send', 'payload', payload);\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      if (privateVariables.ws && privateVariables.ws.readyState === 1) {\n        if (privateVariables.debug) {\n          logInfo('Sending a message to the WebSocket.');\n          logInfo(JSON.stringify(payload));\n        }\n\n        privateVariables.ws.send(JSON.stringify(payload));\n\n        privateVariables.ws.onmessage = (evtMsg) => {\n          if (privateVariables.debug) {\n            logInfo('Receiving a message from the WebSocket.');\n            logInfo(JSON.stringify(evtMsg));\n          }\n\n          resolve(JSON.parse(evtMsg.data));\n        };\n\n      } else {\n        setTimeout(() => {\n          _disconnect();\n          _webSocket(privateVariables.host, payload);\n        }, 5000);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n * @typedef {Object} AuttarCupomLinha\n * @property {string} linha\n */\n\n/** @typedef {Object} AuttarSuccessResponse\n * @property {String} bandeira\n * @property {String} cartao\n * @property {String} codigoAprovacao\n * @property {String} codigoErro\n * @property {String} codigoRespAutorizadora\n * @property {Array} cupomCliente\n * @property {Array.<AuttarCupomLinha>} cupomEstabelecimento\n * @property {Array.<AuttarCupomLinha>} cupomReduzido\n * @property {Array} display\n * @property {Number} nsuAutorizadora\n * @property {Number} nsuCTF\n * @property {Number} operacao\n * @property {String} redeAdquirente\n * @property {Number} retorno\n * @property {String} valorTransacao\n */\n\n/**\n * @class Auttar WebSocket\n * @constructor {AuttarConstructor}\n */\n/**\n * @typedef {object} AuttarConstructor\n * @property {string} host - WebSocket Host URL\n * @property {boolean} debug - Método debug da classe\n * @property {string} orderId - Número de identificação da venda\n * @property {float} amount - Valor da venda\n * @property {AuttarSuccessResponse} ctfTrasaction - Objecto de resposta do websocket\n */\n\nclass Auttar {\n  /**\n   * Construtor da classe\n   * @param {AuttarConstructor} props\n   */\n  constructor(props) {\n    this.__host = props.host || 'ws://localhost:2500';\n    this.debug = props.debug || false;\n    privateVariables.debug = props.debug || false;\n    this.orderId = props.orderId || '';\n    this.__amount = 0;\n    if (props.amount) this.amount = props.amount;\n    this.__transactionDate = new Date()\n      .toLocaleDateString(\n        'pt-BR',\n        {\n          year: '2-digit',\n          month: '2-digit',\n          day: '2-digit',\n          timeZone: 'America/Sao_Paulo',\n        })\n      .replace(/\\//g, '');\n    this.ctfTransaction = {};\n    this.__debugMessage = [];\n  }\n\n  debugLog(message) {\n    if (this.debug) {\n      logInfo(message);\n    }\n  }\n\n  debugWarning(message) {\n    if (this.debug) {\n      logWarn(message);\n    }\n  }\n\n  debugLogMethod(method, args, ...params) {\n    if (this.debug) {\n      logMethod(method, args, params);\n    }\n  }\n\n  classError(message) {\n    this.debugMessage = {\n      message,\n      logLevel: 'error',\n    };\n\n    if (this.debug) {\n      logError(message);\n    }\n\n    return new Error(message);\n  }\n\n  get debugMessage() {\n    return this.__debugMessage;\n  }\n\n  set debugMessage(value) {\n    if (this.debug) {\n      const debugLog = {\n        logLevel: 'info',\n        message: '',\n        ...value,\n        date: new Date().toISOString(),\n      };\n\n      if (debugLog.logLevel === 'log' && debugLog.message) {\n        return this.debugLog(debugLog.message);\n      }\n\n      this.__debugMessage.push(\n        {\n          ...debugLog,\n          date: new Date().toISOString(),\n        }\n      );\n\n      if (debugLog.logLevel === 'info' && debugLog.message) {\n        this.debugLog(debugLog.message);\n      }\n    }\n  }\n\n  get amount() {\n    return this.__amount;\n  }\n\n  /**\n   * Define o valor em para a classe em centavos\n   * @param value\n   */\n  set amount(value) {\n    if (typeof value === 'number' && value <= 0) {\n      throw new Error('Não é possível definir um valor menor ou igual a zero.');\n    } else {\n      this.__amount = parseFloat(value) * 100;\n    }\n  }\n\n  async init() {\n    this.debugLogMethod('init');\n    try {\n      await _webSocket(this.__host);\n\n      return Promise.resolve(this);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Pagamento com cartão de crédito, podendo ser declarado\n   * com parcelamento e se o juro é da administradora.\n   * @param {number} installments - número de parcelas\n   * @param {boolean} withInterest - juros pela administradora\n   * @returns {Promise<AuttarSuccessResponse>}\n   */\n  async credit(installments = 1, withInterest = false) {\n    this.debugLogMethod('credi', 'installments, withInterest', installments, withInterest);\n    try {\n      const requisition = {\n        valorTransacao: this.amount,\n        documento: this.orderId,\n        operacao: privateVariables.transactions.credit.base,\n        dataTransacao: this.__transactionDate,\n      };\n      if (installments > 1) {\n        requisition.operacao = privateVariables.transactions.credit.installment;\n        requisition.numeroParcelas = installments;\n      }\n\n      if (installments > 1 && withInterest) {\n        requisition.operacao = privateVariables.transactions.credit.installmentWithInterest;\n        requisition.numeroParcelas = installments;\n      }\n\n      this.debugMessage = {\n        message: `Pagamento com cartão de crédito. Operação: ${requisition.operacao}. Valor ${this.amount} centavos`,\n      };\n\n      const response = await _send(requisition);\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.ctfTransaction = {\n        ...response,\n        dataTransacao: this.__transactionDate,\n      };\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Pagamento com cartão de crédito, podendo ser\n   * declarado com parcelamento e se o juro é da administradora.\n   * @param {boolean} isVoucher\n   * @returns {Promise<AuttarSuccessResponse>}\n   */\n  async debit(isVoucher = false) {\n    try {\n      this.debugLogMethod('debit', 'isVoucher', isVoucher);\n\n      this.debugMessage = {\n        message: `Pagamento com cartão de débito. Operação: ${operacao}. Valor ${this.amount} centavos`,\n      };\n\n      const requisition = {\n        valorTransacao: this.amount,\n        documento: this.orderId,\n        dataTransacao: this.__transactionDate,\n        operacao: isVoucher\n                  ? privateVariables.transactions.debit.voucher\n                  : privateVariables.transactions.debit.base,\n      };\n\n      const response = await _send(requisition);\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.ctfTransaction = {\n        ...response,\n        dataTransacao: this.__transactionDate,\n      };\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Confirma a operação com o CTF\n   * @returns {Promise<void>}\n   */\n  async confirm() {\n    try {\n      this.debugLogMethod('confirm');\n      const response = await _send({ operacao: privateVariables.transactions.confirm });\n\n      this.debugMessage = {\n        message: `Confirmação de pagamento da operação realizada.\n      Operação: ${this.ctfTransaction.operacao}\n      Data: ${this.ctfTransaction.dataTransacao}\n      Valor: ${this.amount}\n      Bandeira: ${this.ctfTransaction.bandeira}\n      Cartão: ${this.ctfTransaction.cartao}`,\n      };\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.ctfTransaction = Object.assign(this.ctfTransaction, response);\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Inicia o processo de cancelamento de compra.\n   * @returns {Promise<void>}\n   */\n  async requestCancellation() {\n    try {\n      this.debugLogMethod('requestCancellation');\n      this.debugMessage = {\n        message: `Requisição de cancelamento de compra.\n      Operação: ${this.ctfTransaction.operacao}\n      Data: ${this.ctfTransaction.dataTransacao}\n      Valor: ${this.amount}\n      NSU: ${this.ctfTransaction.nsuCTF}`,\n      };\n      const response = await _send({ operacao: privateVariables.transactions.requestCancel });\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Realiza o cancelamento da compra.\n   * @param {string} prop.dataTransacao\n   * @param {number} prop.amount\n   * @param {string} prop.nsuCTF\n   * @returns {Promise<any>}\n   */\n  async cancel(prop = {}) {\n    try {\n      this.debugLogMethod('cancel', 'prop', prop);\n\n      const operacao = privateVariables.transactions.cancel;\n      const tefOperacao = prop.operacao || this.ctfTransaction.operacao;\n      const tefDataTransacao = prop.dataTransacao || this.ctfTransaction.dataTransacao;\n      const tefAmount = prop.amount ? parseFloat(prop.amount) * 100 : this.ctfTransaction.valorTransacao;\n      const tefNsuCTF = prop.nsuCTF || this.ctfTransaction.nsuCTF;\n      this.debugMessage = {\n        message: `Cancelamento de compra.\n        Operação: ${tefOperacao}\n        Data: ${tefDataTransacao}\n        Valor: ${tefAmount}\n        NSU: ${tefNsuCTF}`,\n      };\n\n      const response = await _send(\n        {\n          operacao,\n          valorTransacao: tefAmount,\n          dataTransacao: tefDataTransacao,\n          nsuCTF: tefNsuCTF,\n        }\n      );\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro] || response.display[0].mensagem;\n\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n\nexport default Auttar;\n"],"names":["LogLevelName","Info","Warn","Error","Method","All","None","LogLevelStyle","NAME","BACKGROUND","log","name","style","className","classStyle","message","console","showError","error","logInfo","msg","logWarn","logMethod","method","args","params","JSON","stringify","logError","f","i","arguments","length","Promise","resolve","apply","this","e","reject","body","recover","result","then","value","direct","privateVariables","transactions","credit","base","installment","installmentWithInterest","debit","voucher","cancel","confirm","requestCancel","return","success","timeOut","notAuthorizes","internetError","intertefError","ecommerceError","errorCodes","ws","timeout","close","timeoutConn","host","debug","_disconnect","_webSocket","payload","WebSocket","readyState","onerror","evtError","_send","send","onmessage","evtMsg","parse","data","setTimeout","props","__host","orderId","__amount","amount","__transactionDate","Date","toLocaleDateString","year","month","day","timeZone","replace","ctfTransaction","__debugMessage","debugMessage","logLevel","debugLogMethod","_this","installments","withInterest","requisition","valorTransacao","_this2","documento","operacao","dataTransacao","numeroParcelas","response","retorno","errorMsg","codigoErro","display","map","m","mensagem","join","classError","isVoucher","_this3","_this4","bandeira","cartao","Object","assign","_this5","nsuCTF","prop","tefOperacao","_this6","tefDataTransacao","tefAmount","parseFloat","tefNsuCTF","debugLog","date","toISOString","push"],"mappings":"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"}