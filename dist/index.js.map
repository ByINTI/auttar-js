{"version":3,"file":"index.js","sources":["../src/Helpers.js","../src/Auttar.js"],"sourcesContent":["const LogLevelName = {\n  Info: 'info',\n  Warn: 'warn',\n  Error: 'error',\n  Method: 'method',\n  All: 'all',\n  None: 'none',\n};\n\nconst LogLevelStyle = {\n  Info: 'background:#215ace ; padding: 2px; border-radius: 2px 0 0 2px;  color: #fff;',\n  Warn: 'background:#e8c82c ; padding: 2px; border-radius: 2px 0 0 2px;  color: #000;',\n  Error: 'background:#c92112 ; padding: 2px; border-radius: 2px 0 0 2px;  color: #fff;',\n  Method: 'background:#6d0cb2 ; padding: 2px; border-radius: 2px 0 0 2px;  color: #fff;',\n};\n\nconst NAME = 'Auttar ';\nconst BACKGROUND = 'background:#bc0909 ; padding: 2px; border-radius: 0 2px 2px 0;  color: #fff ';\n\nconst log = (name, style, className, classStyle, message) => {\n  console.log(`%c ${name} %c ${className} %c ${message}`, style, classStyle, 'background: transparent;'); // eslint-disable-line no-console\n};\n\nconst showError = (name, style, className, classStyle, message) => {\n  console.error(`%c ${name} %c ${className} %c ${message}`, style, classStyle, 'background: transparent;'); // eslint-disable-line no-console\n};\n\nexport function required(name, param) {\n  if (param === undefined) {\n    throw new Error(`Parâmetro obrigatório ${name} não declarado.`);\n  }\n\n  return param;\n}\n\nexport function logInfo(msg) {\n  log(LogLevelName.Info, LogLevelStyle.Info, NAME, BACKGROUND, msg);\n}\n\nexport function logWarn(msg) {\n  log(LogLevelName.Warn, LogLevelStyle.Warn, NAME, BACKGROUND, msg);\n}\n\nexport function logMethod(method, args, params) {\n  log(LogLevelName.Method, LogLevelStyle.Method, NAME, BACKGROUND, `Call Method: ${method}(${args || ''}) ${(params) ? `=> ${JSON.stringify(params)}` : ''}`);\n}\n\nexport function logError(msg) {\n  showError(LogLevelName.Warn, LogLevelStyle.Warn, NAME, BACKGROUND, msg);\n}\n\n/**\n * Add spaces to match the max screen length\n * @param {string} text\n * @param {number} maxChar\n * @returns {string}\n */\nexport function addSpaces(text, maxChar) {\n  return text\n    .split('')\n    .concat(...Array(maxChar)\n      .fill(' '))\n    .slice(0, maxChar)\n    .join('');\n}\n\nexport default {\n  required,\n  logInfo,\n  logError,\n  logWarn,\n  logMethod,\n  addSpaces,\n};\n","/* eslint-disable no-underscore-dangle */\nimport {\n  logInfo, logError, logMethod, logWarn,\n} from './Helpers';\n\nconst privateVariables = {\n  transactions: {\n    credit: {\n      base: 112,\n      installment: 113,\n      installmentWithInterest: 114,\n    },\n    debit: {\n      base: 101,\n      voucher: 106,\n    },\n    cancel: 128,\n    confirm: 6,\n    requestCancel: 191,\n  },\n  return: {\n    success: 0,\n    timeOut: 1,\n    notAuthorizes: 5,\n    internetError: 10,\n    intertefError: 12,\n    error: 20,\n    ecommerceError: 30,\n  },\n  errorCodes: {\n    5300: 'Valor não informado',\n    5301: 'Cartão inválido',\n    5302: 'Cartão vencido',\n    5303: 'Data de vencimento inválido',\n    5304: 'Código de segurança inválido',\n    5305: 'Taxa de serviço excede limite',\n    5306: 'Operação não permitida',\n    5307: 'Dados inválidos',\n    5308: 'Valor mínimo da parcela inválido',\n    5309: 'Número de parcelas inválido',\n    5310: 'Número de parcelas excede limite',\n    5311: 'Valor da entrada maior ou igual ao valor da transação',\n    5312: 'Valor da parcela inválido',\n    5313: 'Data inválida',\n    5314: 'Prazo excede limite',\n    5316: 'NSU inválido',\n    5317: 'Operação cancelada pelo usuário',\n    5318: 'Documento inválido (CPF ou CNPJ)',\n    5319: 'Valor do documento inválido',\n    5328: 'Erro na captura de dados do Pin-Pad',\n    5329: 'Erro na captura do chip ou cartão removido antes da hora.',\n    5364: 'Data de emissão do cartão inválida',\n    5355: 'O tipo de financiamento informado não é coerente com o número de parcelas',\n  },\n  ws: null,\n  timeout: null,\n  close: true,\n  timeoutConn: null,\n  debug: false,\n};\n\nfunction _disconnect() {\n  if (privateVariables.debug) {\n    logMethod('_disconnect');\n  }\n\n  privateVariables.ws.close();\n}\n\nfunction _clearTimeout() {\n  if (privateVariables.debug) {\n    logMethod('_clearTimeout');\n    logInfo('Clearing WebSocket timeout.');\n  }\n\n  privateVariables.close = false;\n  clearTimeout(privateVariables.timeoutConn);\n}\n\nfunction _timeout(time = 10000) {\n  if (privateVariables.debug) {\n    logMethod('_timeout', 'time', time);\n    logInfo('Starting WebSocket timeout.');\n  }\n\n  privateVariables.close = true;\n  privateVariables.timeoutConn = setTimeout(() => {\n    if (privateVariables.close) {\n      privateVariables.ws.close();\n    } else {\n      _clearTimeout();\n    }\n  }, time);\n}\n\nfunction _connect(host, payload) {\n  if (privateVariables.debug) {\n    logMethod('_connect', 'host', host);\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      if (privateVariables.ws === null) {\n        if (privateVariables.debug) {\n          logInfo('Starting WebSocket Connection.');\n        }\n\n        privateVariables.ws = new WebSocket(host);\n      } else if (privateVariables.ws.readyState === 2 || privateVariables.ws.readyState === 3) {\n        if (privateVariables.debug) {\n          logWarn('WebSocket is connected but not available. Closing connection to start a new one.');\n        }\n\n        _disconnect();\n        privateVariables.ws = new WebSocket(host);\n      }\n    } catch (e) {\n      reject(e);\n    }\n\n    if (privateVariables.ws) {\n      _timeout();\n\n      const sendRequest = () => {\n        if (privateVariables.debug) {\n          logInfo('Sending a message to the WebSocket.');\n          logInfo(JSON.stringify(payload));\n        }\n\n        _clearTimeout();\n        privateVariables.ws.send(JSON.stringify(payload));\n        _timeout(60000);\n      };\n\n      if (privateVariables.ws.readyState === 1) {\n        sendRequest();\n      } else {\n        privateVariables.ws.onopen = () => {\n          if (privateVariables.debug) {\n            logInfo('WebSocket Connected.');\n          }\n\n          sendRequest();\n        };\n      }\n\n      privateVariables.ws.onmessage = (evtMsg) => {\n        if (privateVariables.debug) {\n          logInfo('Received a message from the WebSocket.');\n          logInfo(JSON.stringify(evtMsg.data));\n        }\n\n        _clearTimeout();\n        resolve(JSON.parse(evtMsg.data));\n      };\n\n      privateVariables.ws.onerror = (evtError) => {\n        if (privateVariables.debug) {\n          logWarn('WebSocket has returned an error.');\n          logError(JSON.stringify(evtError));\n        }\n\n        _clearTimeout();\n        reject(evtError);\n      };\n    }\n  });\n}\n\n/**\n * @typedef {Object} AuttarCupomLinha\n * @property {string} linha\n */\n\n/** @typedef {Object} AuttarSuccessResponse\n * @property {String} bandeira\n * @property {String} cartao\n * @property {String} codigoAprovacao\n * @property {String} codigoErro\n * @property {String} codigoRespAutorizadora\n * @property {Array} cupomCliente\n * @property {Array.<AuttarCupomLinha>} cupomEstabelecimento\n * @property {Array.<AuttarCupomLinha>} cupomReduzido\n * @property {Array} display\n * @property {Number} nsuAutorizadora\n * @property {Number} nsuCTF\n * @property {Number} operacao\n * @property {String} redeAdquirente\n * @property {Number} retorno\n * @property {String} valorTransacao\n */\n\n/**\n * @class Auttar WebSocket\n * @constructor {AuttarConstructor}\n */\n/**\n * @typedef {object} AuttarConstructor\n * @property {string} host - WebSocket Host URL\n * @property {boolean} debug - Método debug da classe\n * @property {string} orderId - Número de identificação da venda\n * @property {float} amount - Valor da venda\n * @property {AuttarSuccessResponse} ctfTrasaction - Objecto de resposta do websocket\n */\n\nclass Auttar {\n  /**\n   * Construtor da classe\n   * @param {AuttarConstructor} props\n   */\n  constructor(props) {\n    this.__host = props.host || 'ws://localhost:2500';\n    this.debug = props.debug || false;\n    privateVariables.debug = props.debug || false;\n    this.orderId = props.orderId || '';\n    this.__amount = 0;\n    if (props.amount) this.amount = props.amount;\n    this.__transactionDate = new Date()\n      .toLocaleDateString(\n        'pt-BR',\n        {\n          year: '2-digit',\n          month: '2-digit',\n          day: '2-digit',\n          timeZone: 'America/Sao_Paulo',\n        },\n      )\n      .replace(/\\//g, '');\n    this.ctfTransaction = {};\n    this.__debugMessage = [];\n  }\n\n  debugLog(message) {\n    if (this.debug) {\n      logInfo(JSON.stringify(message));\n    }\n  }\n\n  debugWarning(message) {\n    if (this.debug) {\n      logWarn(message);\n    }\n  }\n\n  debugLogMethod(method, args, ...params) {\n    if (this.debug) {\n      logMethod(method, args, params);\n    }\n  }\n\n  classError(message) {\n    this.debugMessage = {\n      message,\n      logLevel: 'error',\n    };\n\n    if (this.debug) {\n      logError(message);\n    }\n\n    return new Error(message);\n  }\n\n  get debugMessage() {\n    return this.__debugMessage;\n  }\n\n  set debugMessage(value) {\n    if (this.debug) {\n      const debugLog = {\n        logLevel: 'info',\n        message: '',\n        ...value,\n      };\n\n      if (debugLog.logLevel === 'log' && debugLog.message) {\n        return this.debugLog(debugLog.message);\n      }\n\n      this.__debugMessage\n          .push({\n                  ...debugLog,\n                  date: new Date().toISOString(),\n                });\n\n      return this.debugLog(debugLog.message);\n    }\n  }\n\n  get amount() {\n    return this.__amount;\n  }\n\n  /**\n   * Define o valor em para a classe em centavos\n   * @param value\n   */\n  set amount(value) {\n    if (typeof value === 'number' && value <= 0) {\n      throw new Error('Não é possível definir um valor menor ou igual a zero.');\n    } else {\n      this.__amount = parseFloat(value) * 100;\n    }\n  }\n\n  /**\n   * Pagamento com cartão de crédito, podendo ser declarado\n   * com parcelamento e se o juro é da administradora.\n   * @param {number} installments - número de parcelas\n   * @param {boolean} withInterest - juros pela administradora\n   * @returns {Promise<AuttarSuccessResponse>}\n   */\n  credit(installments = 1, withInterest = false) {\n    return new Promise((resolve, reject) => {\n      this.debugLogMethod('credi', 'installments, withInterest', installments, withInterest);\n      const requisition = {\n        valorTransacao: this.amount,\n        documento: this.orderId,\n        operacao: privateVariables.transactions.credit.base,\n        dataTransacao: this.__transactionDate,\n      };\n      if (installments > 1) {\n        requisition.operacao = privateVariables.transactions.credit.installment;\n        requisition.numeroParcelas = installments;\n      }\n\n      if (installments > 1 && withInterest) {\n        requisition.operacao = privateVariables.transactions.credit.installmentWithInterest;\n        requisition.numeroParcelas = installments;\n      }\n\n      this.debugMessage = {\n        message: `Pagamento com cartão de crédito. Operação: ${requisition.operacao}. Valor ${this.amount} centavos`,\n      };\n\n      _connect(this.__host, requisition)\n        .then((response) => {\n          if (response.retorno > 0) {\n            const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                             || response.display.length\n                             ? response.display.map(m => m.mensagem)\n                                       .join(' ')\n                             : ' ';\n\n            reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n          }\n\n          this.ctfTransaction = {\n            ...response,\n            dataTransacao: this.__transactionDate,\n          };\n\n          this.debugMessage = {\n            message: this.ctfTransaction,\n          };\n\n          resolve(response);\n        })\n        .catch(e => this.classError(e));\n    });\n  }\n\n  /**\n   * Pagamento com cartão de crédito, podendo ser\n   * declarado com parcelamento e se o juro é da administradora.\n   * @param {boolean} isVoucher\n   * @returns {Promise<AuttarSuccessResponse>}\n   */\n  debit(isVoucher = false) {\n    return new Promise((resolve, reject) => {\n      this.debugLogMethod('debit', 'isVoucher', isVoucher);\n      const operacao = isVoucher\n                       ? privateVariables.transactions.debit.voucher\n                       : privateVariables.transactions.debit.base;\n\n      this.debugMessage = {\n        message: `Pagamento com cartão de débito. Operação: ${operacao}. Valor ${this.amount} centavos`,\n      };\n\n      _connect(this.__host, {\n        valorTransacao: this.amount,\n        documento: this.orderId,\n        dataTransacao: this.__transactionDate,\n        operacao,\n      })\n        .then((response) => {\n          if (response.retorno > 0) {\n            const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                             || response.display.length\n                             ? response.display.map(m => m.mensagem)\n                                       .join(' ')\n                             : ' ';\n\n            reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n          }\n\n          this.ctfTransaction = {\n            ...response,\n            dataTransacao: this.__transactionDate,\n          };\n\n          this.debugMessage = {\n            message: this.ctfTransaction,\n          };\n\n          resolve(response);\n        })\n        .catch(e => this.classError(e));\n    });\n  }\n\n  /**\n   * Confirma a operação com o CTF\n   * @returns {Promise<void>}\n   */\n  confirm() {\n    return new Promise((resolve, reject) => {\n      this.debugLogMethod('confirm');\n      const operacao = privateVariables.transactions.confirm;\n\n      _connect(this.__host, { operacao })\n        .then((response) => {\n          this.debugMessage = {\n            message: `Confirmação de pagamento da operação realizada.\n      Operação: ${this.ctfTransaction.operacao}\n      Data: ${this.ctfTransaction.dataTransacao}\n      Valor: ${this.amount}\n      Bandeira: ${this.ctfTransaction.bandeira}\n      Cartão: ${this.ctfTransaction.cartao}`,\n          };\n          if (response.retorno > 0) {\n            const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                             || response.display.length\n                             ? response.display.map(m => m.mensagem)\n                                       .join(' ')\n                             : ' ';\n\n            reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n          }\n\n          this.ctfTransaction = Object.assign(this.ctfTransaction, response);\n          this.debugMessage = {\n            message: this.ctfTransaction,\n          };\n\n          resolve(response);\n        })\n        .catch(e => this.classError(e));\n    });\n  }\n\n  /**\n   * Inicia o processo de cancelamento de compra.\n   * @returns {Promise<void>}\n   */\n  requestCancellation() {\n    return new Promise((resolve, reject) => {\n      this.debugLogMethod('requestCancellation');\n      const operacao = privateVariables.transactions.requestCancel;\n\n      _connect(this.__host, { operacao })\n        .then((response) => {\n          this.debugMessage = {\n            message: `Requisição de cancelamento de compra.\n      Operação: ${this.ctfTransaction.operacao}\n      Data: ${this.ctfTransaction.dataTransacao}\n      Valor: ${this.amount}\n      NSU: ${this.ctfTransaction.nsuCTF}`,\n          };\n          if (response.retorno > 0) {\n            const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                             || response.display.length\n                             ? response.display.map(m => m.mensagem)\n                                       .join(' ')\n                             : ' ';\n\n            reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n          }\n\n          this.debugMessage = {\n            message: response,\n          };\n\n          resolve(response);\n        })\n        .catch(e => this.classError(e));\n    });\n  }\n\n  /**\n   * Realiza o cancelamento da compra.\n   * @param {string} prop.dataTransacao\n   * @param {number} prop.amount\n   * @param {string} prop.nsuCTF\n   * @param {string} prop.operacao\n   * @returns {Promise<any>}\n   */\n  cancel(prop = {}) {\n    return new Promise((resolve, reject) => {\n      this.debugLogMethod('cancel', 'prop', prop);\n      const operacao = privateVariables.transactions.cancel;\n      const tefOperacao = prop.operacao || this.ctfTransaction.operacao;\n      const tefDataTransacao = prop.dataTransacao || this.ctfTransaction.dataTransacao;\n      const tefAmount = prop.amount ? parseFloat(prop.amount) * 100 : this.ctfTransaction.valorTransacao;\n      const tefNsuCTF = prop.nsuCTF || this.ctfTransaction.nsuCTF;\n\n      _connect(this.__host, {\n        operacao,\n        valorTransacao: tefAmount,\n        dataTransacao: tefDataTransacao,\n        nsuCTF: tefNsuCTF,\n      })\n        .then((response) => {\n          this.debugMessage = {\n            message: `Cancelamento de compra.\n        Operação: ${tefOperacao}\n        Data: ${tefDataTransacao}\n        Valor: ${tefAmount}\n        NSU: ${tefNsuCTF}`,\n          };\n          if (response.retorno > 0) {\n            const errorMsg = privateVariables.errorCodes[response.codigoErro] || response.display[0].mensagem;\n\n            reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n          }\n\n          this.debugMessage = {\n            message: response,\n          };\n\n          resolve(response);\n        })\n        .catch(e => this.classError(e));\n    });\n  }\n}\n\nexport default Auttar;\n"],"names":["LogLevelName","Info","Warn","Error","Method","All","None","LogLevelStyle","NAME","BACKGROUND","log","name","style","className","classStyle","message","console","showError","error","logInfo","msg","logWarn","logMethod","method","args","params","JSON","stringify","logError","privateVariables","transactions","credit","base","installment","installmentWithInterest","debit","voucher","cancel","confirm","requestCancel","return","success","timeOut","notAuthorizes","internetError","intertefError","ecommerceError","errorCodes","ws","timeout","close","timeoutConn","debug","_disconnect","_clearTimeout","clearTimeout","_timeout","time","setTimeout","_connect","host","payload","Promise","resolve","reject","WebSocket","readyState","e","sendRequest","send","onopen","onmessage","evtMsg","data","parse","onerror","evtError","Auttar","props","__host","orderId","__amount","amount","this","__transactionDate","Date","toLocaleDateString","year","month","day","timeZone","replace","ctfTransaction","__debugMessage","debugMessage","logLevel","installments","withInterest","_this","debugLogMethod","requisition","valorTransacao","documento","operacao","dataTransacao","numeroParcelas","then","response","retorno","errorMsg","codigoErro","display","length","map","m","mensagem","join","classError","catch","isVoucher","_this2","_this3","bandeira","cartao","Object","assign","_this4","nsuCTF","prop","_this5","tefOperacao","tefDataTransacao","tefAmount","parseFloat","tefNsuCTF","value","debugLog","push","date","toISOString"],"mappings":"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"}