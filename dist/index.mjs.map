{"version":3,"file":"index.mjs","sources":["../src/Helpers.js","../src/Auttar.js"],"sourcesContent":["const LogLevelName = {\n  Info: 'info',\n  Warn: 'warn',\n  Error: 'error',\n  Method: 'method',\n  All: 'all',\n  None: 'none',\n};\n\nconst LogLevelStyle = {\n  Info: 'background:#215ace ; padding: 2px; border-radius: 2px;  color: #fff;',\n  Warn: 'background:#e8c82c ; padding: 2px; border-radius: 2px;  color: #000;',\n  Error: 'background:#c92112 ; padding: 2px; border-radius: 2px;  color: #fff;',\n  Method: 'background:#6d0cb2 ; padding: 2px; border-radius: 2px;  color: #fff;',\n};\n\nconst NAME = '%c Auttar ';\nconst BACKGROUND = 'background:#bc0909 ; padding: 2px; border-radius: 2px;  color: #fff ';\n\nconst log = (name, style, className, classStyle, message) => {\n  console.log(`%c ${name} %c ${className} %c ${message}`, style, classStyle, 'background: transparent;'); // eslint-disable-line no-console\n};\n\nconst showError = (name, style, className, classStyle, message) => {\n  console.error(`%c ${name} %c ${className} %c ${message}`, style, classStyle, 'background: transparent;'); // eslint-disable-line no-console\n};\n\nexport function required(name, param) {\n  if (param === undefined) {\n    throw new Error(`Parâmetro obrigatório ${name} não declarado.`);\n  }\n\n  return param;\n}\n\nexport function logInfo(msg) {\n  log(LogLevelName.Info, LogLevelStyle.Info, NAME, BACKGROUND, msg);\n}\n\nexport function logWarn(msg) {\n  log(LogLevelName.Warn, LogLevelStyle.Warn, NAME, BACKGROUND, msg);\n}\n\nexport function logMethod(method, args, params) {\n  log(LogLevelName.Method, LogLevelStyle.Method, NAME, BACKGROUND,\n      `Call Method: ${method}(${args || ''}) ${(params) ? `=> ${JSON.stringify(params)}` : ''}`);\n}\n\nexport function logError(msg) {\n  showError(LogLevelName.Warn, LogLevelStyle.Warn, NAME, BACKGROUND, msg);\n}\n\n/**\n * Add spaces to match the max screen length\n * @param {string} text\n * @param {number} maxChar\n * @returns {string}\n */\nexport function addSpaces(text, maxChar) {\n  return text\n    .split('')\n    .concat(...Array(maxChar)\n      .fill(' '))\n    .slice(0, maxChar)\n    .join('');\n}\n\nexport default {\n  required,\n  logInfo,\n  logError,\n  logWarn,\n  logMethod,\n  addSpaces,\n};\n","/* eslint-disable */\nimport { logInfo, logError, logMethod, logWarn } from './Helpers';\n\nconst privateVariables = {\n  transactions: {\n    credit: {\n      base: 112,\n      installment: 113,\n      installmentWithInterest: 114,\n    },\n    debit: {\n      base: 101,\n      voucher: 106,\n    },\n    cancel: 128,\n    confirm: 6,\n    requestCancel: 191,\n  },\n  return: {\n    success: 0,\n    timeOut: 1,\n    notAuthorizes: 5,\n    internetError: 10,\n    intertefError: 12,\n    error: 20,\n    ecommerceError: 30,\n  },\n  errorCodes: {\n    5300: 'Valor não informado',\n    5301: 'Cartão inválido',\n    5302: 'Cartão vencido',\n    5303: 'Data de vencimento inválido',\n    5304: 'Código de segurança inválido',\n    5305: 'Taxa de serviço excede limite',\n    5306: 'Operação não permitida',\n    5307: 'Dados inválidos',\n    5308: 'Valor mínimo da parcela inválido',\n    5309: 'Número de parcelas inválido',\n    5310: 'Número de parcelas excede limite',\n    5311: 'Valor da entrada maior ou igual ao valor da transação',\n    5312: 'Valor da parcela inválido',\n    5313: 'Data inválida',\n    5314: 'Prazo excede limite',\n    5316: 'NSU inválido',\n    5317: 'Operação cancelada pelo usuário',\n    5318: 'Documento inválido (CPF ou CNPJ)',\n    5319: 'Valor do documento inválido',\n    5328: 'Erro na captura de dados do Pin-Pad',\n    5329: 'Erro na captura do chip ou cartão removido antes da hora.',\n    5364: 'Data de emissão do cartão inválida',\n    5355: 'O tipo de financiamento informado não é coerente com o número de parcelas',\n  },\n  ws: null,\n  timeout: null,\n  close: true,\n  timeoutConn: null,\n  firstCall: true,\n  debug: false,\n};\n\nfunction _disconnect() {\n  if (privateVariables.debug) {\n    logMethod('_disconnect');\n  }\n\n  privateVariables.ws.close();\n\n  if (privateVariables.debug) {\n    logInfo('WebSocket Disconnected');\n  }\n}\n\nfunction _clearTimeout() {\n  if (privateVariables.debug) {\n    logMethod('_clearTimeout');\n  }\n\n  privateVariables.close = false;\n  clearTimeout(privateVariables.timeoutConn);\n\n  if (privateVariables.debug) {\n    logInfo('WebSotcket Timeout cleared.');\n  }\n}\n\nfunction _timeout(time = 10000) {\n  if (privateVariables.debug) {\n    logMethod('_timeout', 'time', time);\n  }\n\n  privateVariables.close = true;\n\n  if (privateVariables.debug) {\n    logInfo('Starting WebSocket Timeout');\n  }\n\n  privateVariables.timeoutConn = setTimeout(() => {\n    if (privateVariables.close) {\n      _disconnect();\n    } else {\n      _clearTimeout();\n    }\n  }, time);\n}\n\nfunction _webSocket(host, payload) {\n  if (privateVariables.debug) {\n    logMethod('_webSocket', 'host, payload', host, payload);\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      if (privateVariables.debug) {\n        logInfo('Starting WebSocket Connection.');\n      }\n\n      if (privateVariables.ws === null) {\n        if (privateVariables.debug) {\n          logInfo('WebSocket not active, creating a new connection.');\n        }\n\n        privateVariables.ws = new WebSocket(host);\n      } else if (privateVariables.ws.readyState === 2 || privateVariables.ws.readyState === 3) {\n        if (privateVariables.debug) {\n          logWarn('WebSocket is connected but not available. Closing connection to start a new one.');\n        }\n\n        _disconnect();\n        privateVariables.ws = new WebSocket(host);\n      }\n    } catch (e) {\n      reject(e);\n    }\n\n    if (privateVariables.ws) {\n      _timeout();\n\n      privateVariables.ws.onopen = () => {\n        if (privateVariables.debug) {\n          logInfo('Setting the WebSocket opening message');\n        }\n\n        _clearTimeout();\n        if (privateVariables.debug) {\n          logInfo(JSON.parse(payload));\n        }\n\n        if (payload) {\n          privateVariables.ws.send(JSON.stringify(payload));\n        }\n\n        _timeout(60000);\n      };\n\n      privateVariables.ws.onmessage = (evtMsg) => {\n        if (privateVariables.debug) {\n          logInfo('Receiving a message from the WebSocket.');\n          logInfo(JSON.parse(evtMsg));\n        }\n\n        _clearTimeout();\n        resolve(JSON.parse(evtMsg.data));\n      };\n\n      privateVariables.ws.onerror = (evtError) => {\n        if (privateVariables.debug) {\n          logWarn('WebSocket has returned an error.');\n          logError(evtError);\n        }\n\n        _clearTimeout();\n        reject(evtError);\n      };\n    }\n  });\n}\n\nfunction _send(payload) {\n  if (privateVariables.debug) {\n    logMethod('_send', 'payload', payload);\n  }\n\n  return new Promise((resolve, reject) => {\n    try {\n      if (privateVariables.ws && privateVariables.ws.readyState === 1) {\n        if (privateVariables.debug) {\n          logInfo('Sending a message to the WebSocket.');\n          logInfo(JSON.parse(payload));\n        }\n\n        privateVariables.ws.send(JSON.stringify(payload));\n        privateVariables.ws.onmessage = (evtMsg) => {\n          if (privateVariables.debug) {\n            logInfo('Received an message from the WebSocket.');\n          }\n\n          resolve(JSON.parse(evtMsg.data));\n        };\n      } else {\n        setTimeout(() => _send(payload), 5000);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n * @typedef {Object} AuttarCupomLinha\n * @property {string} linha\n */\n\n/** @typedef {Object} AuttarSuccessResponse\n * @property {String} bandeira\n * @property {String} cartao\n * @property {String} codigoAprovacao\n * @property {String} codigoErro\n * @property {String} codigoRespAutorizadora\n * @property {Array} cupomCliente\n * @property {Array.<AuttarCupomLinha>} cupomEstabelecimento\n * @property {Array.<AuttarCupomLinha>} cupomReduzido\n * @property {Array} display\n * @property {Number} nsuAutorizadora\n * @property {Number} nsuCTF\n * @property {Number} operacao\n * @property {String} redeAdquirente\n * @property {Number} retorno\n * @property {String} valorTransacao\n */\n\n/**\n * @class Auttar WebSocket\n * @constructor {AuttarConstructor}\n */\n/**\n * @typedef {object} AuttarConstructor\n * @property {string} host - WebSocket Host URL\n * @property {boolean} debug - Método debug da classe\n * @property {string} orderId - Número de identificação da venda\n * @property {float} amount - Valor da venda\n * @property {AuttarSuccessResponse} ctfTrasaction - Objecto de resposta do websocket\n */\n\nclass Auttar {\n  /**\n   * Construtor da classe\n   * @param {AuttarConstructor} props\n   */\n  constructor(props) {\n    this.__host = props.host || 'ws://localhost:2500';\n    this.debug = props.debug || false;\n    privateVariables.debug = props.debug || false;\n    this.orderId = props.orderId || '';\n    this.__amount = 0;\n    if (props.amount) this.amount = props.amount;\n    this.__transactionDate = new Date()\n      .toLocaleDateString(\n        'pt-BR',\n        {\n          year: '2-digit',\n          month: '2-digit',\n          day: '2-digit',\n          timeZone: 'America/Sao_Paulo',\n        })\n      .replace(/\\//g, '');\n    this.ctfTransaction = {};\n    this.__debugMessage = [];\n\n    return this.init();\n  }\n\n  debugLog(message) {\n    if (this.debug) {\n      logInfo(message);\n    }\n  }\n\n  debugWarning(message) {\n    if (this.debug) {\n      logWarn(message);\n    }\n  }\n\n  debugLogMethod(method, args, ...params) {\n    if (this.debug) {\n      logMethod(method, args, params);\n    }\n  }\n\n  classError(message) {\n    this.debugMessage = {\n      message,\n      logLevel: 'error',\n    };\n\n    if (this.debug) {\n      logError(message);\n    }\n\n    return new Error(message);\n  }\n\n  get debugMessage() {\n    return this.__debugMessage;\n  }\n\n  set debugMessage(value) {\n    if (this.debug) {\n      const debugLog = {\n        logLevel: 'info',\n        message: '',\n        ...value,\n        date: new Date().toISOString(),\n      };\n\n      if (debugLog.logLevel === 'log' && debugLog.message) {\n        return this.debugLog(debugLog.message);\n      }\n\n      this.__debugMessage.push(\n        {\n          ...debugLog,\n          date: new Date().toISOString(),\n        }\n      );\n\n      if (debugLog.logLevel === 'info' && debugLog.message) {\n        this.debugLog(debugLog.message);\n      }\n    }\n  }\n\n  get amount() {\n    return this.__amount;\n  }\n\n  /**\n   * Define o valor em para a classe em centavos\n   * @param value\n   */\n  set amount(value) {\n    if (typeof value === 'number' && value <= 0) {\n      throw new Error('Não é possível definir um valor menor ou igual a zero.');\n    } else {\n      this.__amount = parseFloat(value) * 100;\n    }\n  }\n\n  async init() {\n    this.debugLogMethod('init');\n    try {\n      await _webSocket(this.__host);\n\n      return Promise.resolve(this);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Pagamento com cartão de crédito, podendo ser declarado\n   * com parcelamento e se o juro é da administradora.\n   * @param {number} installments - número de parcelas\n   * @param {boolean} withInterest - juros pela administradora\n   * @returns {Promise<AuttarSuccessResponse>}\n   */\n  async credit(installments = 1, withInterest = false) {\n    this.debugLogMethod('credi', 'installments, withInterest', installments, withInterest);\n    try {\n      const requisition = {\n        valorTransacao: this.amount,\n        documento: this.orderId,\n        operacao: privateVariables.transactions.credit.base,\n        dataTransacao: this.__transactionDate,\n      };\n      if (installments > 1) {\n        requisition.operacao = privateVariables.transactions.credit.installment;\n        requisition.numeroParcelas = installments;\n      }\n\n      if (installments > 1 && withInterest) {\n        requisition.operacao = privateVariables.transactions.credit.installmentWithInterest;\n        requisition.numeroParcelas = installments;\n      }\n\n      this.debugMessage = {\n        message: `Pagamento com cartão de crédito. Operação: ${requisition.operacao}. Valor ${this.amount} centavos`,\n      };\n\n      const response = await _send(requisition);\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.ctfTransaction = {\n        ...response,\n        dataTransacao: this.__transactionDate,\n      };\n\n      this.debugMessage = {\n        message: `Resposta do servidor -> ${JSON.stringify(response)}`,\n        logLevel: 'log',\n      };\n\n      this.debugMessage = {\n        message: this.ctfTransaction,\n        logLevel: 'json',\n      };\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Pagamento com cartão de crédito, podendo ser\n   * declarado com parcelamento e se o juro é da administradora.\n   * @param {boolean} isVoucher\n   * @returns {Promise<AuttarSuccessResponse>}\n   */\n  async debit(isVoucher = false) {\n    try {\n      this.debugLogMethod('debit', 'isVoucher', isVoucher);\n\n      this.debugMessage = {\n        message: `Pagamento com cartão de débito. Operação: ${operacao}. Valor ${this.amount} centavos`,\n      };\n\n      const requisition = {\n        valorTransacao: this.amount,\n        documento: this.orderId,\n        dataTransacao: this.__transactionDate,\n        operacao: isVoucher\n                  ? privateVariables.transactions.debit.voucher\n                  : privateVariables.transactions.debit.base,\n      };\n\n      const response = await _send(requisition);\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.ctfTransaction = {\n        ...response,\n        dataTransacao: this.__transactionDate,\n      };\n\n      this.debugMessage = {\n        message: `Resposta do servidor -> ${JSON.stringify(response)}`,\n        logLevel: 'log',\n      };\n\n      this.debugMessage = {\n        message: this.ctfTransaction,\n        logLevel: 'json',\n      };\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Confirma a operação com o CTF\n   * @returns {Promise<void>}\n   */\n  async confirm() {\n    try {\n      this.debugLogMethod('confirm');\n      const response = await _send({ operacao: privateVariables.transactions.confirm });\n\n      this.debugMessage = {\n        message: `Confirmação de pagamento da operação realizada.\n      Operação: ${this.ctfTransaction.operacao}\n      Data: ${this.ctfTransaction.dataTransacao}\n      Valor: ${this.amount}\n      Bandeira: ${this.ctfTransaction.bandeira}\n      Cartão: ${this.ctfTransaction.cartao}`,\n      };\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.ctfTransaction = Object.assign(this.ctfTransaction, response);\n\n      this.debugMessage = {\n        message: `Resposta do servidor -> ${JSON.stringify(response)}`,\n        logLevel: 'log',\n      };\n\n      this.debugMessage = {\n        message: response,\n        logLevel: 'json',\n      };\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Inicia o processo de cancelamento de compra.\n   * @returns {Promise<void>}\n   */\n  async requestCancellation() {\n    try {\n      this.debugLogMethod('requestCancellation');\n      this.debugMessage = {\n        message: `Requisição de cancelamento de compra.\n      Operação: ${this.ctfTransaction.operacao}\n      Data: ${this.ctfTransaction.dataTransacao}\n      Valor: ${this.amount}\n      NSU: ${this.ctfTransaction.nsuCTF}`,\n      };\n      const response = await _send({ operacao: privateVariables.transactions.requestCancel });\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro]\n                         || response.display.length\n                         ? response.display.map(m => m.mensagem)\n                                   .join(' ')\n                         : ' ';\n\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.debugMessage = {\n        message: `Resposta do servidor -> ${JSON.stringify(response)}`,\n        logLevel: 'log',\n      };\n\n      this.debugMessage = {\n        message: responsea,\n        logLevel: 'json',\n      };\n\n      return Promise.resolve(response);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Realiza o cancelamento da compra.\n   * @param {string} prop.dataTransacao\n   * @param {number} prop.amount\n   * @param {string} prop.nsuCTF\n   * @returns {Promise<any>}\n   */\n  async cancel(prop = {}) {\n    try {\n      this.debugLogMethod('cancel', 'prop', prop);\n\n      const operacao = privateVariables.transactions.cancel;\n      const tefOperacao = prop.operacao || this.ctfTransaction.operacao;\n      const tefDataTransacao = prop.dataTransacao || this.ctfTransaction.dataTransacao;\n      const tefAmount = prop.amount ? parseFloat(prop.amount) * 100 : this.ctfTransaction.valorTransacao;\n      const tefNsuCTF = prop.nsuCTF || this.ctfTransaction.nsuCTF;\n      this.debugMessage = {\n        message: `Cancelamento de compra.\n        Operação: ${tefOperacao}\n        Data: ${tefDataTransacao}\n        Valor: ${tefAmount}\n        NSU: ${tefNsuCTF}`,\n      };\n\n      const response = await _send(\n        {\n          operacao,\n          valorTransacao: tefAmount,\n          dataTransacao: tefDataTransacao,\n          nsuCTF: tefNsuCTF,\n        }\n      );\n\n      if (response.retorno > 0) {\n        const errorMsg = privateVariables.errorCodes[response.codigoErro] || response.display[0].mensagem;\n\n        return Promise.reject(this.classError(`Transação não concluída ${response.codigoErro}: ${errorMsg}`));\n      }\n\n      this.debugMessage = {\n        message: `Resposta do servidor -> ${JSON.stringify(response)}`,\n        logLevel: 'log',\n      };\n\n      this.debugMessage = {\n        message: response,\n        logLevel: 'json',\n      };\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\n\nexport default Auttar;\n"],"names":["LogLevelName","Info","Warn","Error","Method","All","None","LogLevelStyle","NAME","BACKGROUND","log","name","style","className","classStyle","message","console","showError","error","logInfo","msg","logWarn","logMethod","method","args","params","JSON","stringify","logError","f","i","arguments","length","Promise","resolve","apply","this","e","reject","body","recover","result","then","value","direct","privateVariables","transactions","credit","base","installment","installmentWithInterest","debit","voucher","cancel","confirm","requestCancel","return","success","timeOut","notAuthorizes","internetError","intertefError","ecommerceError","errorCodes","ws","timeout","close","timeoutConn","firstCall","debug","_disconnect","_clearTimeout","clearTimeout","_timeout","time","setTimeout","_send","payload","readyState","parse","send","onmessage","evtMsg","data","props","__host","host","orderId","__amount","amount","__transactionDate","Date","toLocaleDateString","year","month","day","timeZone","replace","ctfTransaction","__debugMessage","init","debugMessage","logLevel","debugLogMethod","_this","WebSocket","onopen","onerror","evtError","installments","withInterest","requisition","valorTransacao","_this2","documento","operacao","dataTransacao","numeroParcelas","response","retorno","errorMsg","codigoErro","display","map","m","mensagem","join","classError","isVoucher","_this3","_this4","bandeira","cartao","Object","assign","_this5","nsuCTF","responsea","prop","tefOperacao","_this6","tefDataTransacao","tefAmount","parseFloat","tefNsuCTF","debugLog","date","toISOString","push"],"mappings":"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"}